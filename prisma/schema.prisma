generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Club {
  id          String @id @default(cuid())
  name        String
  description String
  money       Float
  cost        Float
  popularity  Int
  hostId      String
  host        Host   @relation(fields: [hostId], references: [id])
}

model Host {
  id      String @id @default(cuid())
  name    String
  surname String

  Club Club[]
}

model Hostess {
  id      String @id @default(cuid())
  name    String
  surname String
}

model Activity {
  id             String    @id @default(cuid())
  name           String
  description    String
  popularityGain Int
  cost           Float
  media          String
  performerId    String
  performer      Performer @relation(fields: [performerId], references: [id])
}

model Performer {
  id      String @id @default(cuid())
  name    String
  surname String
  image   String

  Activity Activity[]
}
